#include "uart.h"
#include "stm32f4xx.h"

#define GPIOA_EN			(1U << 0)
#define UART2_EN			(1U << 17)
#define SYS_FREQ			16000000
#define APB1_CLK			SYS_FREQ
#define UART_BAUDRATE		115200
#define CR1_TE				(1U << 3)
#define CR1_UE				(1U << 13)

static void ComputeUart_BR(uint32_t periph_clk, uint32_t baudrate);
static void UartSet_BR(uint32_t periph_clk, uint32_t baudrate);

void UART_Tx_Init(void)
{
	/*
	 * Enable CLock access to GPIO A
	 */
	RCC -> AHB1ENR |= GPIOA_EN;

	/*
	 * Set PA2 mode to alternate functionality mode
	 */
	GPIOA -> MODER &= ~(1U << 4);
	GPIOA -> MODER |= (1U << 5);

	/*
	 * Set Alternate function type to AF7 (UART2_TX)
	 */
	GPIOA -> AFR[0] |= (1U << 8);
	GPIOA -> AFR[0] |= (1U << 9);
	GPIOA -> AFR[0] |= (1U << 10);
	GPIOA -> AFR[0] &= ~(1U << 11);

	/*
	 * Enable clock access to UART
	 */
	RCC -> APB1ENR |= UART2_EN;

	/*
	 * Configure Baud Rate
	 */
	UartSet_BR(APB1_CLK, UART_BAUDRATE);

	/*
	 * Configure Transfer Direction
	 */
	USART2 -> CR1 = CR1_TE;

	/*
	 * Enable UART Module
	 */
	USART2 -> CR1 |= CR1_UE;

}


static void UartSet_BR(uint32_t periph_clk, uint32_t baudrate)
{
	USART2 -> BRR = ComputeUart_BR(periph_clk, baudrate);
}
